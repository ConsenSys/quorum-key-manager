{
    "swagger": "2.0",
    "info": {
        "description": "Quorum Key Manager API server documentation.",
        "title": "Quorum Key Manager API",
        "contact": {},
        "license": {
            "name": "Business Source License 1.1",
            "url": "https://mariadb.com/bsl11/"
        },
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/stores/{storeName}/eth1": {
            "post": {
                "description": "Creates a new ECDSA Secp256k1 key representing an ethereum account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create ethereum account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target Store Name",
                        "name": "storeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create ethereum account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateEth1AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created ethereum account",
                        "schema": {
                            "$ref": "#/definitions/types.Eth1AccountResponse"
                        }
                    }
                }
            }
        },
        "/stores/{storeName}/eth1/import": {
            "post": {
                "description": "Import an ECDSA Secp256k1 key representing an ethereum account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Import ethereum account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target Store Name",
                        "name": "storeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create ethereum account request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ImportEth1AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created ethereum account",
                        "schema": {
                            "$ref": "#/definitions/types.Eth1AccountResponse"
                        }
                    }
                }
            }
        },
        "/stores/{storeName}/eth1/{address}": {
            "patch": {
                "description": "Update ethereum account metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update ethereum account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target Store Name",
                        "name": "storeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ethereum address to update",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update ethereum account metadata request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.UpdateEth1AccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update ethereum account",
                        "schema": {
                            "$ref": "#/definitions/types.Eth1AccountResponse"
                        }
                    }
                }
            }
        },
        "/stores/{storeName}/eth1/{address}/sign": {
            "patch": {
                "description": "Sign random hex payload with stored ethereum account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "summary": "Sign payload with ethereum account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Target Store Name",
                        "name": "storeName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Ethereum address to update",
                        "name": "address",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sign payload request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.SignHexPayloadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Signed payload data",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.CreateEth1AccountRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "my-account"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "types.Eth1AccountResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "0x664895b5fE3ddf049d2Fb508cfA03923859763C6"
                },
                "compressedPublicKey": {
                    "type": "string",
                    "example": "1abae27a0cbfb02945720425d3b80c7e09728534"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2020-07-09T12:35:42.115395Z"
                },
                "deletedAt": {
                    "type": "string",
                    "example": "2020-07-09T12:35:42.115395Z"
                },
                "destroyedAt": {
                    "type": "string",
                    "example": "2020-07-09T12:35:42.115395Z"
                },
                "disabled": {
                    "type": "boolean",
                    "example": false
                },
                "expireAt": {
                    "type": "string",
                    "example": "2020-07-09T12:35:42.115395Z"
                },
                "id": {
                    "type": "string",
                    "example": "my-key-id"
                },
                "publicKey": {
                    "type": "string",
                    "example": "048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "example": "2020-07-09T12:35:42.115395Z"
                }
            }
        },
        "types.ImportEth1AccountRequest": {
            "type": "object",
            "required": [
                "id",
                "privateKey"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "my-imported-account"
                },
                "privateKey": {
                    "type": "string",
                    "example": "56202652FDFFD802B7252A456DBD8F3ECC0352BBDE76C23B40AFE8AEBD714E2E"
                },
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "types.SignHexPayloadRequest": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "data": {
                    "description": "required to be hex value",
                    "type": "string",
                    "example": "0xfeee"
                }
            }
        },
        "types.UpdateEth1AccountRequest": {
            "type": "object",
            "properties": {
                "tags": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        },
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2AccessCode": {
            "type": "oauth2",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information"
            }
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Implicit": {
            "type": "oauth2",
            "flow": "implicit",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        },
        "OAuth2Password": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "read": " Grants read access",
                "write": " Grants write access"
            }
        }
    },
    "x-extension-openapi": {
        "example": "value on a json format"
    }
}