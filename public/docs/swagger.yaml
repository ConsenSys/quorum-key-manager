basePath: /
definitions:
  types.CreateEth1AccountRequest:
    properties:
      id:
        example: my-account
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    required:
    - id
    type: object
  types.CreateKeyRequest:
    properties:
      curve:
        example: secp256k1
        type: string
      id:
        example: my-key
        type: string
      signingAlgorithm:
        example: ecdsa
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    required:
    - curve
    - id
    - signingAlgorithm
    type: object
  types.DomainSeparator:
    properties:
      chainID:
        example: 1
        type: integer
      name:
        example: MyDApp
        type: string
      salt:
        example: some-random-string
        type: string
      verifyingContract:
        example: 0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18
        type: string
      version:
        example: v1.0.0
        type: string
    required:
    - chainID
    - name
    - version
    type: object
  types.ECRecoverRequest:
    properties:
      data:
        example: 0xfeaeee...
        type: string
      signature:
        example: 0x6019a3c8...
        type: string
    required:
    - data
    - signature
    type: object
  types.Eth1AccountResponse:
    properties:
      address:
        example: 0x664895b5fE3ddf049d2Fb508cfA03923859763C6
        type: string
      compressedPublicKey:
        example: 1abae27a0cbfb02945720425d3b80c7e09728534
        type: string
      createdAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      deletedAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      destroyedAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      disabled:
        example: false
        type: boolean
      expireAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      id:
        example: my-key-id
        type: string
      publicKey:
        example: 048e66b3e549818ea2cb354fb70749f6c8de8fa484f7530fc447d5fe80a1c424e4f5ae648d648c980ae7095d1efad87161d83886ca4b6c498ac22a93da5099014a
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      updatedAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
    type: object
  types.ImportEth1AccountRequest:
    properties:
      id:
        example: my-imported-account
        type: string
      privateKey:
        example: 56202652FDFFD802B7252A456DBD8F3ECC0352BBDE76C23B40AFE8AEBD714E2E
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    required:
    - id
    - privateKey
    type: object
  types.ImportKeyRequest:
    properties:
      curve:
        example: secp256k1
        type: string
      id:
        example: my-key
        type: string
      privateKey:
        example: BFVSFJhqUh9DQJwcayNtsWdD2...
        type: string
      signingAlgorithm:
        example: ecdsa
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
    required:
    - curve
    - id
    - privateKey
    - signingAlgorithm
    type: object
  types.KeyResponse:
    properties:
      createdAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      curve:
        example: secp256k1
        type: string
      deletedAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      destroyedAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      disabled:
        example: false
        type: boolean
      expireAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
      id:
        example: my-key
        type: string
      publicKey:
        example: BFVSFJhqUh9DQJwcayNtsWdD2...
        type: string
      signingAlgorithm:
        example: ecdsa
        type: string
      tags:
        additionalProperties:
          type: string
        type: object
      updatedAt:
        example: "2020-07-09T12:35:42.115395Z"
        type: string
    type: object
  types.SignEEATransactionRequest:
    properties:
      chainID:
        example: 0x1 (mainnet)
        type: string
      data:
        example: 0xfeaeee...
        type: string
      nonce:
        example: "0x1"
        type: string
      privacyGroupId:
        example: A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=
        type: string
      privateFor:
        example:
        - A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=
        - B1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=
        items:
          type: string
        type: array
      privateFrom:
        example: A1aVtMxLCUHmBVHXoZzzBgPbW/wj5axDpW9X8l91SGo=
        type: string
      to:
        example: 0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18
        type: string
    required:
    - chainID
    - privateFrom
    type: object
  types.SignETHTransactionRequest:
    properties:
      chainID:
        example: 0x1 (mainnet)
        type: string
      data:
        example: 0xfeaeee...
        type: string
      gasLimit:
        example: "0x5208"
        type: string
      gasPrice:
        example: "0x0"
        type: string
      nonce:
        example: "0x1"
        type: string
      to:
        example: 0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18
        type: string
      value:
        example: "0xfeaeae"
        type: string
    required:
    - chainID
    - gasLimit
    - gasPrice
    type: object
  types.SignHexPayloadRequest:
    properties:
      data:
        description: required to be hex value
        example: "0xfeee"
        type: string
    required:
    - data
    type: object
  types.SignQuorumPrivateTransactionRequest:
    properties:
      data:
        example: 0xfeaeee...
        type: string
      gasLimit:
        example: "0x5208"
        type: string
      gasPrice:
        example: "0x0"
        type: string
      nonce:
        example: "0x1"
        type: string
      to:
        example: 0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18
        type: string
      value:
        example: "0x1"
        type: string
    required:
    - gasLimit
    - gasPrice
    type: object
  types.SignTypedDataRequest:
    properties:
      domainSeparator:
        $ref: '#/definitions/types.DomainSeparator'
      message:
        additionalProperties: true
        type: object
      messageType:
        example: Mail
        type: string
      types:
        additionalProperties:
          items:
            $ref: '#/definitions/types.Type'
          type: array
        type: object
    required:
    - domainSeparator
    - message
    - messageType
    - types
    type: object
  types.Type:
    properties:
      name:
        example: fieldName
        type: string
      type:
        example: string
        type: string
    required:
    - name
    - type
    type: object
  types.UpdateEth1AccountRequest:
    properties:
      tags:
        additionalProperties:
          type: string
        type: object
    type: object
  types.VerifyEth1SignatureRequest:
    properties:
      address:
        example: 0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18
        type: string
      data:
        example: 0xfeaeee...
        type: string
      signature:
        example: 0x6019a3c8...
        type: string
    required:
    - address
    - data
    - signature
    type: object
  types.VerifyTypedDataRequest:
    properties:
      address:
        example: 0x905B88EFf8Bda1543d4d6f4aA05afef143D27E18
        type: string
      data:
        type: string
      signature:
        example: 0x6019a3c8...
        type: string
    required:
    - address
    - data
    - signature
    type: object
host: https://consensysquorum.github.io/quorum-key-manager
info:
  contact: {}
  description: Quorum Key Manager API server documentation.
  license:
    name: Business Source License 1.1
    url: https://mariadb.com/bsl11/
  title: Quorum Key Manager API
  version: "0.1"
paths:
  /stores/{storeName}/eth1:
    get:
      consumes:
      - application/json
      description: List addresses of ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ethereum account list
          schema:
            items:
              items:
                $ref: '#/definitions/types.Eth1AccountResponse'
              type: array
            type: array
      summary: List ethereum accounts
      tags:
      - Ethereum account
    post:
      consumes:
      - application/json
      description: Creates a new ECDSA Secp256k1 key representing an ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Create ethereum account request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CreateEth1AccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created ethereum account
          schema:
            $ref: '#/definitions/types.Eth1AccountResponse'
      summary: Create ethereum account
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/{address}:
    delete:
      consumes:
      - application/json
      description: Soft delete ethereum account, can be recovered
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: bool
      summary: Delete ethereum account
      tags:
      - Ethereum account
    get:
      consumes:
      - application/json
      description: Fetch ethereum account information by address
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ethereum account object
          schema:
            $ref: '#/definitions/types.Eth1AccountResponse'
      summary: Get ethereum account
      tags:
      - Ethereum account
    patch:
      consumes:
      - application/json
      description: Update ethereum account metadata
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Update ethereum account metadata request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.UpdateEth1AccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Update ethereum account
          schema:
            $ref: '#/definitions/types.Eth1AccountResponse'
      summary: Update ethereum account
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/{address}/destroy:
    delete:
      consumes:
      - application/json
      description: Hard delete ethereum account, cannot be recovered
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: bool
      summary: Destroy ethereum account
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/{address}/restore:
    post:
      consumes:
      - application/json
      description: Recover a soft-deleted ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: bool
      summary: Restore ethereum account
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/{address}/sign:
    post:
      consumes:
      - application/json
      description: Sign random hex payload using selected ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Sign payload request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.SignHexPayloadRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: Signed payload data
          schema:
            type: string
      summary: Sign payload with ethereum account
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/{address}/sign-eea-transaction:
    post:
      consumes:
      - application/json
      description: Sign EEA transaction using selected ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Sign EEA transaction request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.SignEEATransactionRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: Signed EEA transaction data
          schema:
            type: string
      summary: Sign EEA transaction
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/{address}/sign-quorum-private-transaction:
    post:
      consumes:
      - application/json
      description: Sign Quorum private transaction using selected ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Sign Quorum transaction request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.SignQuorumPrivateTransactionRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: Signed EEA transaction data
          schema:
            type: string
      summary: Sign Quorum private transaction
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/{address}/sign-typed-data:
    post:
      consumes:
      - application/json
      description: Sign ethereum transaction using selected ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Sign ETH transaction request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.SignETHTransactionRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: Signed transaction data
          schema:
            type: string
      summary: Sign ethereum transaction
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/ec-recover:
    post:
      consumes:
      - application/json
      description: Recover ethereum transaction sender
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Ethereum recover request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.ECRecoverRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: Signed EEA transaction data
          schema:
            type: string
      summary: EC Recover
      tags:
      - Ethereum
  /stores/{storeName}/eth1/import:
    post:
      consumes:
      - application/json
      description: Import an ECDSA Secp256k1 key representing an ethereum account
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Create ethereum account request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.ImportEth1AccountRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Created ethereum account
          schema:
            $ref: '#/definitions/types.Eth1AccountResponse'
      summary: Import ethereum account
      tags:
      - Ethereum account
  /stores/{storeName}/eth1/verify-signature:
    post:
      consumes:
      - application/json
      description: Verify signature of an ethereum signing
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Ethereum signature verify request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.VerifyEth1SignatureRequest'
      responses:
        "200":
          description: Verification confirmed
          schema:
            type: string
        "422":
          description: Invalid verification
          schema:
            type: string
      summary: Verify signature
      tags:
      - Ethereum
  /stores/{storeName}/eth1/verify-typed-data-signature:
    post:
      consumes:
      - application/json
      description: Verify signature of an ethereum type data signing
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Ethereum address
        in: path
        name: address
        required: true
        type: string
      - description: Ethereum signature verify request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.VerifyTypedDataRequest'
      responses:
        "200":
          description: Verification confirmed
          schema:
            type: string
        "422":
          description: Invalid verification
          schema:
            type: string
      summary: Verify typed data signature
      tags:
      - Ethereum
  /stores/{storeName}/keys:
    get:
      consumes:
      - application/json
      description: List store key ids
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: List of key ids
          schema:
            items:
              items:
                $ref: '#/definitions/types.KeyResponse'
              type: array
            type: array
      summary: List key ids
      tags:
      - Keys
    post:
      consumes:
      - application/json
      description: Create key pair by selected curve and signing algorithm
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Create key request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.CreateKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Key object
          schema:
            $ref: '#/definitions/types.KeyResponse'
      summary: Create key
      tags:
      - Keys
  /stores/{storeName}/keys/{id}:
    delete:
      consumes:
      - application/json
      description: Hard delete selected key
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: KeyID to delete
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Destroy key by ID
      tags:
      - Keys
    get:
      consumes:
      - application/json
      description: Retrieve key object by identifier
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Retrieve keyID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Key object
          schema:
            $ref: '#/definitions/types.KeyResponse'
      summary: Get key by ID
      tags:
      - Keys
  /stores/{storeName}/keys/import:
    post:
      consumes:
      - application/json
      description: Import key pair by selected curve and signing algorithm
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Create key request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/types.ImportKeyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Key object
          schema:
            $ref: '#/definitions/types.KeyResponse'
      summary: Import key
      tags:
      - Keys
  /stores/{storeName}/keys/verify-signature:
    post:
      consumes:
      - application/json
      description: Verify whether a signature corresponds to an specific key
      parameters:
      - description: Selected StoreID
        in: path
        name: storeName
        required: true
        type: string
      - description: Retrieve keyID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful verification
        "422":
          description: Invalid verification
      summary: Verify key signature
      tags:
      - Keys
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
  OAuth2Application:
    flow: application
    scopes:
      admin: ' Grants read and write access to administrative information'
      write: ' Grants write access'
    tokenUrl: https://example.com/oauth/token
    type: oauth2
swagger: "2.0"
x-extension-openapi:
  example: value on a json format
